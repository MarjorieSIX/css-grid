@charset "UTF-8";
@import "https://drive.google.com/open?id=1zpb67nI7AiKNre0ps7PyS8XzMDgPPiVh";
/* Document
 * ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
 * ========================================================================== */
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Edge, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
 * ========================================================================== */
/**
 * Remove the margin on nested lists in Chrome, Edge, IE, and Safari.
 */
dl dl,
dl ol,
dl ul,
ol dl,
ul dl {
  margin: 0; }

/**
 * Remove the margin on nested lists in Edge 18- and IE.
 */
ol ol,
ol ul,
ul ol,
ul ul {
  margin: 0; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge 18- and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * Add the correct display in IE.
 */
main {
  display: block; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
 * ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Add the correct text decoration in Edge 18-, IE, and Safari.
 */
abbr[title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/* Embedded content
 * ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images within links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
 * ========================================================================== */
/**
 * Remove the margin on controls in Safari.
 */
button,
input,
select {
  margin: 0; }

/**
 * 1. Show the overflow in IE.
 * 2. Remove the inheritance of text transform in Edge 18-, Firefox, and IE.
 */
button {
  overflow: visible;
  /* 1 */
  text-transform: none;
  /* 2 */ }

/**
 * Correct the inability to style buttons in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * Show the overflow in Edge 18- and IE.
 */
input {
  overflow: visible; }

/**
 * 1. Correct the text wrapping in Edge 18- and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in Edge 18- and IE.
 * 2. Add the correct vertical alignment in Chrome, Edge, and Firefox.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the inheritance of text transform in Firefox.
 */
select {
  text-transform: none; }

/**
 * 1. Remove the margin in Firefox and Safari.
 * 2. Remove the default vertical scrollbar in IE.
 */
textarea {
  margin: 0;
  /* 1 */
  overflow: auto;
  /* 2 */ }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct the odd appearance in Chrome, Edge, and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style upload buttons in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * Remove the inner border and padding of focus outlines in Firefox.
 */
::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus outline styles unset by the previous rule in Firefox.
 */
:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Remove the additional :invalid styles in Firefox.
 */
:-moz-ui-invalid {
  box-shadow: none; }

/* Interactive
 * ========================================================================== */
/*
 * Add the correct display in Edge 18- and IE.
 */
details {
  display: block; }

/*
 * Add the correct styles in Edge 18-, IE, and Safari.
 */
dialog {
  background-color: white;
  border: solid;
  color: black;
  display: block;
  height: -moz-fit-content;
  height: -webkit-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: -webkit-fit-content;
  width: fit-content; }

dialog:not([open]) {
  display: none; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
 * ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* User interaction
 * ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* 
  Définitions des points de rupture
  Pour aller plus loin : https://github.com/eduardoboucas/include-media/tree/master/src
*/
/*
  Mixin ciblant la valeur d'un point de rupture et plus
  Exemple : Afficher sur un écran de taille minimum sm et plus
  Utilisation : @include bp-above(sm) {}
  Résultat : @media (min-width: 768px) {
*/
/*
  Mixin ciblant la valeur d'un point de rupture -1px (pour éviter les conflits avec la mixin bp-above) et moins
  Exemple : Afficher sur un écran de taille maximum sm - 1px et moins
  Utilisation : @include bp-below(sm) {}
  Résultat : @media (max-width: 767px) {
*/
/*
  Mixin ciblant les valeurs entre deux points de rupture
  Exemple : Afficher sur un écran de taille minimum sm et maximum md
  Utilisation : @include bp-between(sm, md) {}
  Résultat : @media (min-width: 768px) and (max-width: 1199px) {
*/
/* 
  Définitions des points de rupture
  Pour aller plus loin : https://github.com/eduardoboucas/include-media/tree/master/src
*/
/*
  Mixin ciblant la valeur d'un point de rupture et plus
  Exemple : Afficher sur un écran de taille minimum sm et plus
  Utilisation : @include bp-above(sm) {}
  Résultat : @media (min-width: 768px) {
*/
/*
  Mixin ciblant la valeur d'un point de rupture -1px (pour éviter les conflits avec la mixin bp-above) et moins
  Exemple : Afficher sur un écran de taille maximum sm - 1px et moins
  Utilisation : @include bp-below(sm) {}
  Résultat : @media (max-width: 767px) {
*/
/*
  Mixin ciblant les valeurs entre deux points de rupture
  Exemple : Afficher sur un écran de taille minimum sm et maximum md
  Utilisation : @include bp-between(sm, md) {}
  Résultat : @media (min-width: 768px) and (max-width: 1199px) {
*/
/*
  Largeur de contenu maximum
  breakpoint - marges
*/
/*
  Nombre de colonnes:
  XS: 4 colonnes.
  SM, MD, LG, LG-confort, XL, XL-confort: 12 colonnes
*/
/*
  Tailles de colonnes
*/
/*
  Taille des marges. (marges horizontales du contenu)
  N'est pas utilisé comme on utilise la valeur largeur de contenu qui est le calcul breakpoint - marges
*/
/*
  Taille des gutters
  XS, SM et MD: 16px.
  LG et XL: 24px
*/
/*
  Nom du point de rupture
  Valeur de la taille max du point de rupture
  Largeur du contenu max (breakpoint - marge)
  Largeur de colonnes
  Gutters : marge entre les colonnes
*/
.grid-container {
  display: flex;
  height: 100vh;
  justify-content: center;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  width: 100%; }
  .grid-container.active {
    opacity: 0.5; }
  .grid-container.hidden {
    opacity: 0; }
  .grid-container .grid-size-name {
    background: rgba(0, 0, 0, 0.5);
    height: 30px;
    text-align: center;
    width: 100%;
    z-index: 1; }
    @media (min-width: 320px) {
      .grid-container .grid-size-name:before {
        color: white;
        content: "xs";
        font-weight: bold;
        text-transform: uppercase; } }
    @media (min-width: 768px) {
      .grid-container .grid-size-name:before {
        color: white;
        content: "sm";
        font-weight: bold;
        text-transform: uppercase; } }
    @media (min-width: 976px) {
      .grid-container .grid-size-name:before {
        color: white;
        content: "md";
        font-weight: bold;
        text-transform: uppercase; } }
    @media (min-width: 1200px) {
      .grid-container .grid-size-name:before {
        color: white;
        content: "lg";
        font-weight: bold;
        text-transform: uppercase; } }
    @media (min-width: 1440px) {
      .grid-container .grid-size-name:before {
        color: white;
        content: "xl";
        font-weight: bold;
        text-transform: uppercase; } }
    @media (min-width: 1200px) and (max-width: 1439.99px) {
      .confort .grid-container .grid-size-name:before {
        content: "LG - Confort"; } }
    @media (min-width: 1440px) {
      .confort .grid-container .grid-size-name:before {
        content: "XL - Confort"; } }
  .grid-container .grid-display {
    align-content: start;
    counter-reset: grid;
    display: grid;
    grid-template-rows: 1;
    height: 100vh;
    justify-content: center;
    pointer-events: none;
    position: fixed;
    width: 100%;
    z-index: 1;
    /*@include bp-between(lg, xl) {
      .grid-column {
        margin: 0 $min-lg-gutter-width/2;
        width: $lg-col-width;
        .confort & {
          margin: 0 $min-lgc-gutter-width/2;
          width: $lgc-col-width;
        }
      }
    }

    @include bp-above(xl) {
      .grid-column {
        margin: 0 $min-lg-gutter-width/2;
        width: $xl-col-width;
        .confort & {
          margin: 0 $min-lgc-gutter-width/2;
          width: $xlc-col-width;
        }
      }
    }
*/ }
    .grid-container .grid-display .grid-column {
      background-color: lightgreen;
      height: 100vh;
      text-align: center;
      padding-top: 20px;
      position: relative; }
      .grid-container .grid-display .grid-column:before {
        color: white;
        counter-increment: grid;
        content: counters(grid, "");
        font-weight: bold;
        padding-top: 30px; }
    @media (min-width: 320px) {
      .grid-container .grid-display {
        grid-gap: 16px;
        grid-template-columns: repeat(4, 1fr);
        max-width: 100%; } }
    @media (min-width: 768px) {
      .grid-container .grid-display {
        grid-gap: 16px;
        grid-template-columns: repeat(12, 1fr);
        max-width: 100%; } }
    @media (min-width: 976px) {
      .grid-container .grid-display {
        grid-gap: 16px;
        grid-template-columns: repeat(12, 1fr);
        max-width: 944px; } }
    @media (min-width: 1200px) {
      .grid-container .grid-display {
        grid-gap: 24px;
        grid-template-columns: repeat(12, 1fr);
        max-width: 1128px; } }
    @media (min-width: 1440px) {
      .grid-container .grid-display {
        grid-gap: 24px;
        grid-template-columns: repeat(12, 1fr);
        max-width: 1344px; } }
    @media (min-width: 1200px) {
      .confort .grid-container .grid-display {
        grid-gap: 48px; } }
    @media (min-width: 320px) and (max-width: 767.99px) {
      .grid-container .grid-display {
        /*.grid-column {
        margin: 0 $max-md-gutter-width/2;
      }*/ }
        .grid-container .grid-display .grid-column:nth-child(-n+5) {
          display: grid; } }
    @media (min-width: 768px) and (max-width: 975.99px) {
      .grid-container .grid-display .grid-column:nth-child(-n+13) {
        display: grid; } }
    @media (min-width: 320px) and (max-width: 975.99px) {
      .grid-container .grid-display {
        width: calc(100% - (16px * 2)); } }

/* 
  Définitions des points de rupture
  Pour aller plus loin : https://github.com/eduardoboucas/include-media/tree/master/src
*/
/*
  Mixin ciblant la valeur d'un point de rupture et plus
  Exemple : Afficher sur un écran de taille minimum sm et plus
  Utilisation : @include bp-above(sm) {}
  Résultat : @media (min-width: 768px) {
*/
/*
  Mixin ciblant la valeur d'un point de rupture -1px (pour éviter les conflits avec la mixin bp-above) et moins
  Exemple : Afficher sur un écran de taille maximum sm - 1px et moins
  Utilisation : @include bp-below(sm) {}
  Résultat : @media (max-width: 767px) {
*/
/*
  Mixin ciblant les valeurs entre deux points de rupture
  Exemple : Afficher sur un écran de taille minimum sm et maximum md
  Utilisation : @include bp-between(sm, md) {}
  Résultat : @media (min-width: 768px) and (max-width: 1199px) {
*/
/*
  Largeur de contenu maximum
  breakpoint - marges
*/
/*
  Nombre de colonnes:
  XS: 4 colonnes.
  SM, MD, LG, LG-confort, XL, XL-confort: 12 colonnes
*/
/*
  Tailles de colonnes
*/
/*
  Taille des marges. (marges horizontales du contenu)
  N'est pas utilisé comme on utilise la valeur largeur de contenu qui est le calcul breakpoint - marges
*/
/*
  Taille des gutters
  XS, SM et MD: 16px.
  LG et XL: 24px
*/
.w-full {
  background: lightseagreen;
  margin: 0 auto;
  padding: 20px; }
  @media (min-width: 320px) and (max-width: 975.99px) {
    .w-full {
      width: calc(100% - (16px * 2)); } }
  @media (min-width: 976px) and (max-width: 1199.99px) {
    .w-full {
      width: 944px; } }
  @media (min-width: 1200px) and (max-width: 1439.99px) {
    .w-full {
      width: 1128px; } }
  @media (min-width: 1440px) {
    .w-full {
      width: 1344px; } }

.w-bleed {
  background-color: lightyellow;
  width: 100%;
  z-index: 2; }

.row {
  background-color: #aaa;
  margin: 0 auto;
  z-index: 2; }

.w-12 {
  background-color: lightblue;
  padding: 20px; }

.w-8 {
  background-color: lightpink;
  padding: 20px; }

.w-6 {
  background-color: lightcoral;
  padding: 20px; }

.w-4 {
  background-color: lightseagreen;
  padding: 20px; }

.w-3 {
  background-color: lightgreen;
  padding: 20px; }

/*
  Pour le XS avec largeurs de contenu fluides
*/
@media (max-width: 767.99px) {
  .row {
    width: calc(100% - (16px * 2)); }
    .row.xs-flex {
      display: flex;
      justify-content: space-between; }
      .row.xs-flex .w-xs-2 {
        width: calc(((100% / 4) * 2) - (16px / 2)); }
    .row .w-xs-4 {
      margin-left: auto;
      margin-right: auto;
      width: 100%; } }

/*
  Pour le SM avec largeurs de contenu fluides
*/
@media (min-width: 768px) and (max-width: 975.99px) {
  .row {
    display: flex;
    justify-content: space-between;
    width: calc(100% - (16px * 2)); }
    .row .w-sm-3 {
      background: lightcyan;
      margin-left: 0;
      margin-right: 0;
      width: calc((100% - (16px  * 3)) / 4); }
    .row .w-sm-6 {
      background: lightgoldenrodyellow;
      margin-left: 0;
      margin-right: 0;
      width: calc((100% / 2) - (16px / 2)); }
    .row .w-sm-12 {
      margin-left: 0;
      margin-right: 0;
      width: 100%; } }

/*
  Pour les largeurs de contenu fixe
*/
@media (min-width: 976px) {
  .w-3 {
    width: calc((64px * 3) + (16px * (3 - 1))); }
  .w-4 {
    width: calc((64px * 4) + (16px * (4 - 1))); }
  .w-6 {
    width: calc((64px * 6) + (16px * (6 - 1))); }
  .w-8 {
    width: calc((64px * 8) + (16px * (8 - 1))); }
  .row,
  .w-12 {
    width: 944px; } }

@media (min-width: 1200px) {
  .w-3 {
    width: calc((72px * 3) + (24px * (3 - 1))); }
  .w-4 {
    width: calc((72px * 4) + (24px * (4 - 1))); }
  .w-6 {
    width: calc((72px * 6) + (24px * (6 - 1))); }
  .w-8 {
    width: calc((72px * 8) + (24px * (8 - 1))); }
  .row,
  .w-12 {
    width: 1128px; } }

@media (min-width: 1440px) {
  .w-3 {
    width: calc((90px * 3) + (24px * (3 - 1))); }
  .w-4 {
    width: calc((90px * 4) + (24px * (4 - 1))); }
  .w-6 {
    width: calc((90px * 6) + (24px * (6 - 1))); }
  .w-8 {
    width: calc((90px * 8) + (24px * (8 - 1))); }
  .row,
  .w-12 {
    width: 1344px; } }

/*
  Pour le mode "confort" sur LG et XL
  Attention le mode confort est activé sur une page complète et non sur des blocs de contenus.
  LG
*/
@media (min-width: 1200px) and (max-width: 1439.99px) {
  .confort .row {
    width: 1128px; }
    .confort .row .w-3 {
      width: calc((50px * 3) + (48px * (3 - 1))); }
    .confort .row .w-4 {
      width: calc((50px * 4) + (48px * (4 - 1))); }
    .confort .row .w-6 {
      width: calc((50px * 6) + (48px * (6 - 1))); }
    .confort .row .w-8 {
      width: calc((50px * 8) + (48px * (8 - 1))); } }

/*
  XL
*/
@media (min-width: 1440px) {
  .confort .row {
    width: 1344px; }
    .confort .row .w-3 {
      width: calc((68px * 3) + (48px * (3 - 1))); }
    .confort .row .w-4 {
      width: calc((68px * 4) + (48px * (4 - 1))); }
    .confort .row .w-6 {
      width: calc((68px * 6) + (48px * (6 - 1))); }
    .confort .row .w-8 {
      width: calc((68px * 8) + (48px * (8 - 1))); } }

/*
  Pour le MD et plus
*/
@media (min-width: 976px) {
  .row {
    display: flex;
    justify-content: space-between; }
  .w-12 {
    margin-left: auto;
    margin-right: auto; } }

/* 
  Définitions des points de rupture
  Pour aller plus loin : https://github.com/eduardoboucas/include-media/tree/master/src
*/
/*
  Mixin ciblant la valeur d'un point de rupture et plus
  Exemple : Afficher sur un écran de taille minimum sm et plus
  Utilisation : @include bp-above(sm) {}
  Résultat : @media (min-width: 768px) {
*/
/*
  Mixin ciblant la valeur d'un point de rupture -1px (pour éviter les conflits avec la mixin bp-above) et moins
  Exemple : Afficher sur un écran de taille maximum sm - 1px et moins
  Utilisation : @include bp-below(sm) {}
  Résultat : @media (max-width: 767px) {
*/
/*
  Mixin ciblant les valeurs entre deux points de rupture
  Exemple : Afficher sur un écran de taille minimum sm et maximum md
  Utilisation : @include bp-between(sm, md) {}
  Résultat : @media (min-width: 768px) and (max-width: 1199px) {
*/
@media (max-width: 975.99px) {
  .hide-xs,
  .hide-md {
    display: none !important;
    visibility: hidden; } }

/*
  Largeur de contenu maximum
  breakpoint - marges
*/
/*
  Nombre de colonnes:
  XS: 4 colonnes.
  SM, MD, LG, LG-confort, XL, XL-confort: 12 colonnes
*/
/*
  Tailles de colonnes
*/
/*
  Taille des marges. (marges horizontales du contenu)
  N'est pas utilisé comme on utilise la valeur largeur de contenu qui est le calcul breakpoint - marges
*/
/*
  Taille des gutters
  XS, SM et MD: 16px.
  LG et XL: 24px
*/
*, ::before, ::after {
  box-sizing: border-box; }

body {
  font-family: '$font-averta-name', Arial, Helvetica, sans-serif;
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%; }

h1,
h2,
h3,
h4,
h5,
h6,
p,
li {
  font-family: '$font-averta-name', Arial, Helvetica, sans-serif; }

hr {
  border-top: 1px solid '$color-graphite-40'; }
