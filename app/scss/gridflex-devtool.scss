@import "breakpoints";
@import "gridflex-variables";

/*
  Nom du point de rupture
  Valeur de la taille max du point de rupture
  Largeur du contenu max (breakpoint - marge)
  Largeur de colonnes
  Gutters : marge entre les colonnes
*/
$grid: (
  (
    xs,
    map-get($breakpoints, xs),
    100%,
    $xs-col-count,
    $max-md-gutter-width
  ), 
  (
    sm,
    map-get($breakpoints, sm),
    100%,
    $sm-andplus-col-count,
    $max-md-gutter-width
  ),
  (
    md,
    map-get($breakpoints, md),
    $md-max-width,
    $sm-andplus-col-count,
    $max-md-gutter-width
  ),
  (
    lg,
    map-get($breakpoints, lg),
    $lg-max-width,
    $sm-andplus-col-count,
    $min-lg-gutter-width
  ),
  (
    xl,
    map-get($breakpoints, xl),
    $xl-max-width,
    $sm-andplus-col-count,
    $min-lg-gutter-width
  )
) !default;

.grid-container {
  display: flex;
  height: 100vh;
  justify-content: center;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  width: 100%;
  
  &.active { opacity: 0.5; }
  &.hidden { opacity: 0; }

  .grid-size-name {
    background: rgba(0, 0, 0, 0.5);
    height: 30px;
    text-align: center;
    width: 100%;
    z-index: 1;
  
    @each $bp-name, $breakpoint in $grid {
      @media (min-width: #{$breakpoint}) {
        &:before {
          color: white;
          content: "#{$bp-name}";
          font-weight: bold;
          text-transform: uppercase;
        }
      }
    }

    .confort & {
      @include bp-between(lg, xl) {
        &:before {
          content: "LG - Confort";
        }
      }
      @include bp-above(xl) {
        &:before {
          content: "XL - Confort";
        }
      }
    }
  }

  .grid-display {
    align-content: start;
    counter-reset: grid;
    //display: -ms-grid;
    display: grid;
    //-ms-grid-rows: 1;
    grid-template-rows: 1;
    height: 100vh;
    justify-content: center;
    pointer-events: none;
    position: fixed;
    width: 100%;
    z-index: 1;

    .grid-column {
      background-color: lightgreen;
      height: 100vh;
      text-align: center;
      padding-top: 20px;
      position: relative;
      &:before {
        color: white;
        counter-increment: grid;
        content: counters(grid,"");
        font-weight: bold;
        padding-top: 30px;
      }
    }

    @each $bp-name, $breakpoint, $grid-width, $grid-columns, $grid-gutters, $grid-margins in $grid {
      @media (min-width: #{$breakpoint}) {
        grid-gap: #{$grid-gutters};
        //-ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
        grid-template-columns: repeat(#{$grid-columns}, 1fr);
        max-width: #{$grid-width};
      }
    }

    .confort & {
      @include bp-above(lg) {
        grid-gap: #{$min-lgc-gutter-width};
      }
    }
    /*@include bp-between(lg, xl) {
      .grid-column {
        margin: 0 $min-lg-gutter-width/2;
        width: $lg-col-width;
        .confort & {
          margin: 0 $min-lgc-gutter-width/2;
          width: $lgc-col-width;
        }
      }
    }

    @include bp-above(xl) {
      .grid-column {
        margin: 0 $min-lg-gutter-width/2;
        width: $xl-col-width;
        .confort & {
          margin: 0 $min-lgc-gutter-width/2;
          width: $xlc-col-width;
        }
      }
    }
*/
    @include bp-between(xs, sm) {
      /*.grid-column {
        margin: 0 $max-md-gutter-width/2;
      }*/

      .grid-column:nth-child(-n+5) {
        //display: -ms-grid;
        display: grid;
        //margin-right: 0;
      }
    }

    @include bp-between(sm, md) {
      .grid-column:nth-child(-n+13) {
        //display: -ms-grid;
        display: grid;
      }
    }

    @include bp-between(xs, md) {
      width: calc(100% - (#{$max-md-margin-width} * 2));
    }
  }
}

